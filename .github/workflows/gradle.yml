# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  pull_request:
    branches: [ "master" ]
  push:
    branches: [ "master" ]

jobs:
  #  build:
  #    runs-on: ubuntu-latest
  #    permissions:
  #      contents: read
  #
  #    steps:
  #      - name: Checkout
  #        uses: actions/checkout@v4
  #      - name: Set up JDK 21
  #        uses: actions/setup-java@v4
  #        with:
  #          java-version: '21'
  #          distribution: 'temurin'
  #      - name: Setup Gradle
  #        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
  #      - name: Build with Gradle Wrapper
  #        run: ./gradlew build
  #      - name: Store jacoco report
  #        uses: actions/upload-artifact@v3
  #        with:
  #          name: jacoco_coverage_report
  #          path: build/reports/jacoco/test/html
  #      - name: Store test reports
  #        uses: actions/upload-artifact@v3
  #        with:
  #          name: test_report
  #          path: build/reports/tests/test
  #  update_coverage_report:
  #    needs: build
  #    permissions:
  #      contents: read
  #      pages: write
  #      id-token: write
  #    uses: ./.github/workflows/test_coverage.yaml

  #  deploy:
  #    needs: build
  #    permissions:
  #      contents: read
  #    uses: ./.github/workflows/deploy_to_minikube.yaml



  publish:
    permissions:
      contents: read
      pages: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_NAME }}
          password: ${{ secrets.DOCKER_HUB_PASS }}
      - name: Build and publish updated image
        run: |
          image_tag=rubberduck2307/${chess-backend}:latest
          docker build -f ./Dockerfile  --tag ${image_tag} .
          docker push ${image_tag}